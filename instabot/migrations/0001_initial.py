# Generated by Django 3.1 on 2022-09-09 12:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import instabot.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('serial_no', models.CharField(blank=True, max_length=96, null=True)),
                ('status', models.CharField(choices=[('BZ', 'BUSY'), ('SB', 'STANDBY')], max_length=2)),
                ('user_account_access', models.BooleanField(default=True)),
                ('network_ip', models.CharField(blank=True, max_length=54, null=True, unique=True)),
                ('data', models.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoogleJobs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('firstname', models.CharField(blank=True, max_length=100, null=True)),
                ('lastname', models.CharField(blank=True, max_length=256, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, max_length=100, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('P', 'PENDING'), ('C', 'COMPLETED'), ('I', 'In-progress'), ('F', 'FAILED')], max_length=2, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('job_type', models.CharField(choices=[('DM_2_FOLLOW_BK', 'DM_2_FOLLOW_BK'), ('NEW_STORY_DIRECT_MESSAGE', 'NEW_STORY_DIRECT_MESSAGE'), ('FOLLOW_BK_PERCENT', 'FOLLOW_BK_PERCENT'), ('NEW_DIRECT_MESSAGE_STAT', 'NEW_DIRECT_MESSAGE_STAT'), ('COLLECT_FOLO_FOLI', 'COLLECT_FOLO_FOLI'), ('CMNT_TARGET_POST', 'CMNT_TARGET_POST'), ('LIKE_CMNT_FOLI_POST', 'LIKE_CMNT_FOLI_POST'), ('AUTO_REPLY_COMMENT', 'AUTO_REPLY_COMMENT'), ('LIKE_CMNT_FOL_POST', 'LIKE_CMNT_FOL_POST'), ('LIKE_COMMENT_POST', 'LIKE_COMMENT_POST'), ('DM_2_FOLLOW_BK', 'DM_2_FOLLOW_BK'), ('FOLLOW_COMP_FOLLOWERS', 'FOLLOW_COMP_FOLLOWERS'), ('POST_STORY', 'POST STORY'), ('ADVANCED_FOLLOW_TAGS', 'ADVANCED_FOLLOW_TAGS'), ('POST', 'POST'), ('POST_VIDEO', 'POST VIDEO'), ('FEED_LIKE', 'FEED_LIKE'), ('FEED_COMMENT', 'FEED_COMMENT'), ('URL_LIKE_CMNT', 'URL_LIKE_CMNT'), ('URL_LIKE_FOLLOW', 'URL_LIKE_FOLLOW'), ('USERNAME_FOLLOW', 'USERNAME_FOLLOW'), ('USERNAME_COMMENT', 'USERNAME_COMMENT'), ('HASHTAG_FOLLOW', 'HASHTAG_FOLLOW'), ('AUTO_LIKE', 'AUTO_LIKE'), ('AUTO_COMMENT', 'AUTO_COMMENT'), ('AUTO_FOLLOW', 'AUTO_FOLLOW'), ('VIEW_STORY', 'VIEW_STORY'), ('USERNAME_LIKE', 'USERNAME_LIKE'), ('FOLLOW_USER', 'FOLLOW_USER'), ('UNFOLLOW_USER', 'UNFOLLOW_USER'), ('USERNAME_LIKE_FOLLOW', 'USERNAME_LIKE_FOLLOW'), ('LOGIN_USER', 'LOGIN_USER'), ('AUTO_UNFOLLOW', 'AUTO_UNFOLLOW'), ('ENTER_OTP', 'ENTER_OTP'), ('GET_PROFILE', 'GET_PROFILE'), ('MULTI_USER_FOLLOW', 'MULTI_USER_FOLLOW'), ('LIKE_MULTIPLE_POSTS', 'LIKE_MULTIPLE_POSTS'), ('UNFOLLOW_SINGLE', 'UNFOLLOW_SINGLE'), ('FOLLOW_TAGS', 'FOLLOW_TAGS'), ('INSERT_INITIAL_POSTS', 'INSERT_INITIAL_POSTS'), ('INSERT_RECENT_POSTS', 'INSERT_RECENT_POSTS'), ('CREATE_BOT', 'CREATE_BOT'), ('UPDATE_ENGAGEMENT_PROFILE', 'UPDATE_ENGAGEMENT_PROFILE'), ('ENGAGEMENT_POST', 'ENGAGEMENT_POST'), ('MULTI_IMAGE_POST', 'MULTI_IMAGE_POST'), ('GET_STATS', 'GET_STATS')], max_length=100)),
                ('job_title', models.CharField(max_length=100)),
                ('app_type', models.CharField(choices=[('IG', 'INSTAGRAM'), ('YT', 'YOUTUBE')], max_length=2)),
                ('image', models.ImageField(blank=True, null=True, upload_to=instabot.models.path_and_rename)),
                ('video', models.FileField(blank=True, null=True, upload_to=instabot.models.path_and_rename)),
                ('scheduled_for', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('P', 'PENDING'), ('C', 'COMPLETED'), ('F', 'FAILED'), ('I', 'In-progress'), ('CN', 'CANCELED')], max_length=2, null=True)),
                ('is_directed', models.BooleanField(default=True)),
                ('timezone', models.CharField(blank=True, max_length=100, null=True)),
                ('data', models.JSONField(blank=True, default=dict, null=True)),
                ('result_data', models.JSONField(blank=True, default=dict, null=True)),
                ('is_draft', models.BooleanField(default=False)),
                ('like_comment', models.BooleanField(default=False)),
                ('other_acc_not_followed_back', models.BooleanField(default=False)),
                ('other_acc_followed_back', models.BooleanField(default=False)),
                ('vpn', models.CharField(choices=[('SURF_SHARK', 'SURF_SHARK'), ('VPN_CITY', 'VPN_CITY')], default='SURF_SHARK', max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('phone_id', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('service', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], max_length=20)),
                ('resp_data', models.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SurviralGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('desc', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('phone_country', models.CharField(blank=True, choices=[('ru', 'Russian Federation'), ('kz', 'Kazakhstan'), ('ua', 'Ukraine'), ('ht', 'Haiti'), ('ro', 'Romania'), ('ar', 'Argentina'), ('by', 'Belarus'), ('ba', 'Bos. and Herz.'), ('br', 'Brazil'), ('kh', 'Cambodia'), ('ca_v', 'Canada (Virtual)'), ('cl', 'Chile'), ('co', 'Colombia'), ('hr', 'Croatia'), ('cy', 'Cyprus'), ('do', 'Dominicana'), ('eg', 'Egypt (Virtual)'), ('ee', 'Estonia'), ('fi', 'Finland'), ('fr', 'France'), ('ge', 'Georgia'), ('de', 'Germany'), ('id', 'Indonesia'), ('il', 'Israel'), ('ke', 'Kenya'), ('xk', 'Kosovo'), ('kg', 'Kyrgyzstan'), ('la', 'Laos'), ('lv', 'Latvia'), ('lt', 'Lithuania'), ('my', 'Malaysia'), ('mx', 'Mexico'), ('ma', 'Morocco'), ('nl', 'Netherlands'), ('nz', 'New Zealand'), ('py', 'Paraguay'), ('ph', 'Philippines'), ('pl', 'Poland'), ('pt', 'Portugal'), ('za', 'South Africa'), ('es', 'Spain'), ('se', 'Sweden'), ('uk', 'United Kingdom'), ('us', 'United States'), ('us3', 'USA (Virtual)'), ('vn', 'Vietnam')], default='us', max_length=100, null=True)),
                ('account_type', models.CharField(choices=[('IG', 'INSTAGRAM'), ('YT', 'YOUTUBE')], max_length=2)),
                ('auth_type', models.CharField(choices=[('CO', 'COMPANY'), ('CL', 'CLIENT')], default='CL', max_length=2)),
                ('account_from', models.CharField(choices=[('CO', 'COMPANY'), ('CL', 'CLIENT')], default='CL', max_length=2)),
                ('login_status', models.CharField(choices=[('P', 'PROCESSING'), ('IN', 'LOGGED_IN'), ('OUT', 'LOGGED_OUT'), ('F', 'FAILED'), ('O', 'OTP REQUIRED')], default='P', max_length=255)),
                ('full_name', models.CharField(blank=True, max_length=256, null=True)),
                ('account_username', models.CharField(max_length=256, unique=True)),
                ('account_password', models.CharField(max_length=256)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('B', 'Banned')], max_length=1)),
                ('account_for', models.CharField(choices=[('M', 'Mobile'), ('W', 'Web')], default='W', max_length=1)),
                ('engagement_for', models.CharField(blank=True, choices=[('FZ', 'FRONTIAZ'), ('JA', 'JAPAN')], default=None, max_length=50, null=True)),
                ('data', models.JSONField(blank=True, default=dict, null=True)),
                ('followers_list', models.JSONField(blank=True, default=dict, null=True)),
                ('earliest_post_detail', models.JSONField(blank=True, default=dict, null=True)),
                ('perform_activity', models.BooleanField(default=False)),
                ('target_auidience', models.TextField(blank=True, null=True)),
                ('competitors', models.TextField(blank=True, null=True)),
                ('target_area', models.CharField(blank=True, max_length=256, null=True)),
                ('target_gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('B', 'Both')], default='M', max_length=2, null=True)),
                ('country', models.CharField(blank=True, max_length=150, null=True)),
                ('like', models.BooleanField(default=False)),
                ('follow', models.BooleanField(default=False)),
                ('unfollow', models.BooleanField(default=False)),
                ('comment', models.BooleanField(default=False)),
                ('automation', models.BooleanField(default=True)),
                ('autodirectmessage', models.BooleanField(default=False)),
                ('storydirectmessage', models.BooleanField(default=False)),
                ('directmessage', models.TextField(blank=True, null=True)),
                ('directmessagestory', models.TextField(blank=True, null=True)),
                ('autoreply', models.BooleanField(default=False)),
                ('story_dm_data', models.TextField(blank=True, null=True)),
                ('twofa_protected', models.BooleanField(default=False)),
                ('twofa_codes', models.CharField(blank=True, max_length=255, null=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='instabot.surviralgroup')),
                ('phone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instagram_account_phone', to='instabot.phone')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserPostsDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('likes_till_now', models.IntegerField(default=0)),
                ('comments_till_now', models.IntegerField(default=0)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instabot.job')),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instabot.useraccount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGoogleAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=256)),
                ('recovery_email', models.CharField(max_length=100)),
                ('phone_country', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='google_account_phone', to='instabot.phone')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnfollowUsername',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=150)),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instabot.useraccount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_stat', models.DateTimeField(blank=True, null=True)),
                ('data', models.JSONField(blank=True, default=dict, null=True)),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instabot.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='LikedCommentedAccounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('competitor_insta_username', models.CharField(blank=True, max_length=50, null=True)),
                ('instagram_accounts', models.JSONField(blank=True, null=True)),
                ('followed_insta_accounts', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(choices=[('P', 'PENDING'), ('C', 'COMPLETED'), ('F', 'FAILED'), ('I', 'In-progress'), ('CN', 'CANCELED')], default='P', max_length=2)),
                ('office_insta_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='instabot.useraccount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('P', 'PENDING'), ('C', 'COMPLETED'), ('F', 'FAILED'), ('I', 'In-progress'), ('CN', 'CANCELED')], max_length=2)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instabot.device')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instabot.job')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='job',
            name='user_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='instabot.useraccount'),
        ),
        migrations.CreateModel(
            name='InstaAccFollowingsFollowers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('recent_influencers', models.JSONField(blank=True, null=True)),
                ('latest_followers', models.JSONField(blank=True, null=True)),
                ('latest_followings', models.JSONField(blank=True, null=True)),
                ('office_insta_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='instabot.useraccount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HashtagsAndCompetitors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('hashtags', models.JSONField(blank=True, default=dict, null=True)),
                ('competitors', models.JSONField(blank=True, default=dict, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FollowedUsername',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=150)),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instabot.useraccount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='device',
            name='accounts',
            field=models.ManyToManyField(blank=True, related_name='accounts', to='instabot.UserAccount'),
        ),
        migrations.AddField(
            model_name='device',
            name='active_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_account', to='instabot.useraccount'),
        ),
        migrations.CreateModel(
            name='DailyAccountData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('cta', models.IntegerField(default=0)),
                ('posts', models.IntegerField(default=0)),
                ('unfollow', models.IntegerField(default=0)),
                ('story_dm', models.IntegerField(default=0)),
                ('followers', models.IntegerField(default=0)),
                ('following', models.IntegerField(default=0)),
                ('thank_u_dm', models.IntegerField(default=0)),
                ('today_posts', models.IntegerField(default=0)),
                ('comment_post', models.IntegerField(default=0)),
                ('comment_follow', models.IntegerField(default=0)),
                ('today_followers', models.IntegerField(default=0)),
                ('today_followings', models.IntegerField(default=0)),
                ('today_recieved_message_count', models.IntegerField(default=0)),
                ('follow_bk_per', models.FloatField(blank=True, default=None, null=True)),
                ('user_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instabot.useraccount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField(max_length=5000)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('data', models.JSONField(blank=True, default=dict, null=True)),
                ('profile_pic', models.URLField(blank=True, max_length=250, null=True)),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instabot.useraccount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalytics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('day', models.IntegerField(default=0)),
                ('followers', models.IntegerField(default=0)),
                ('following', models.IntegerField(default=0)),
                ('today_follow', models.IntegerField(default=0)),
                ('today_follow_back', models.IntegerField(default=0)),
                ('today_unfollow', models.IntegerField(default=0)),
                ('today_profile_PV', models.IntegerField(default=0)),
                ('today_post', models.IntegerField(default=0)),
                ('today_story', models.IntegerField(default=0)),
                ('today_save', models.IntegerField(default=0)),
                ('today_like', models.IntegerField(default=0)),
                ('today_comment', models.IntegerField(default=0)),
                ('today_click', models.IntegerField(default=0)),
                ('follow_back_per', models.IntegerField(default=0)),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_analytic', to='instabot.useraccount')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
